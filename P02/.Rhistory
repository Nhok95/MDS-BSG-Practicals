library(genetics)
library(dplyr)
library(HardyWeinberg)
library(data.table)
library(psych)
set.seed(2209)
# Chunk 1
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
rm(list = ls(all.names = TRUE))
# Chunk 3: load packages
library(genetics)
library(dplyr)
library(HardyWeinberg)
library(data.table)
library(psych)
set.seed(2209)
# Chunk 4
# load data
filename <- "http://www-eio.upc.es/~jan/data/bsg/TSIChr22v4.raw"
geneticData <- fread(filename, drop = c(1:6)) # first 6 cols are removed since they're not useful
# Chunk 5
variants <- ncol(geneticData); variants;
individuals <- nrow(geneticData); individuals;
cols <- which(colSums(geneticData == 1, na.rm = TRUE) > 0) # Non monomorphic (contains AB)
variants.poly <-length(cols);
variants.mono <- variants-variants.poly;
perc.mono <- 100*variants.mono/variants; perc.mono
geneticData.poly <- geneticData[, ..cols]
remove(geneticData)
ncol(geneticData.poly) #208933
# Chunk 6
rs587756191_T <- dplyr::recode(geneticData.poly$rs587756191_T, `0`="AA", `1`="AB", `2`="BB")
rs587756191_T.g <- genotype(rs587756191_T,sep="")
rs587756191_T.g.summary <- summary(rs587756191_T.g)
rs587756191_T.g.summary$genotype.freq #genotype counts
x <- MakeCounts(geneticData.poly$rs587756191_T)[1,1:3]
results.chi <- HWChisq(x,cc=0.5)
results.chi.nocor <- HWChisq(x,cc=0)
results.exact <- HWExact(x)
results.perm <- HWPerm(x)
# Chunk 7
alpha <- 0.05
count_matrix <- MakeCounts(geneticData.poly)[,1:3]
# Chunk 8
Chisq.pvals <- HWChisqStats(count_matrix, pvalues=TRUE)
p <- 100 * length(which(Chisq.pvals > 0.05)) / length(Chisq.pvals);p
# Chunk 9
c <- 100 * (1 - (length(which(Chisq.pvals > 0.05)) / length(Chisq.pvals)));c
# Chunk 1
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
rm(list = ls(all.names = TRUE))
# Chunk 3: load packages
library(genetics)
library(dplyr)
library(HardyWeinberg)
library(data.table)
library(psych)
set.seed(2209)
# Chunk 4
# load data
filename <- "TSIChr22v4.raw"
geneticData <- fread(filename, drop = c(1:6)) # first 6 cols are removed since they're not useful
# Chunk 5
variants <- ncol(geneticData); variants;
individuals <- nrow(geneticData); individuals;
cols <- which(colSums(geneticData == 1, na.rm = TRUE) > 0) # Non monomorphic (contains AB)
variants.poly <-length(cols);
variants.mono <- variants-variants.poly;
perc.mono <- 100*variants.mono/variants; perc.mono
geneticData.poly <- geneticData[, ..cols]
remove(geneticData)
ncol(geneticData.poly) #208933
# Chunk 6
rs587756191_T <- dplyr::recode(geneticData.poly$rs587756191_T, `0`="AA", `1`="AB", `2`="BB")
rs587756191_T.g <- genotype(rs587756191_T,sep="")
rs587756191_T.g.summary <- summary(rs587756191_T.g)
rs587756191_T.g.summary$genotype.freq #genotype counts
x <- MakeCounts(geneticData.poly$rs587756191_T)[1,1:3]
results.chi <- HWChisq(x,cc=0.5)
results.chi.nocor <- HWChisq(x,cc=0)
results.exact <- HWExact(x)
results.perm <- HWPerm(x)
# Chunk 7
alpha <- 0.05
count_matrix <- MakeCounts(geneticData.poly)[,1:3]
# Chunk 8
Chisq.pvals <- HWChisqStats(count_matrix, pvalues=TRUE)
p <- 100 * length(which(Chisq.pvals > 0.05)) / length(Chisq.pvals);p
# Chunk 9
c <- 100 * (1 - (length(which(Chisq.pvals > 0.05)) / length(Chisq.pvals)));c
# Chunk 10
max.ind <- which.max(Chisq.pvals)
most.sign.SNP.chisq <- geneticData.poly[, which.max(Chisq.pvals), with=FALSE]
names(most.sign.SNP.chisq)
gen.counts <- MakeCounts(most.sign.SNP.chisq)[,1:3] # A lot of AB
HWChisq(gen.counts, cc = 0)
# Chunk 1
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
rm(list = ls(all.names = TRUE))
# Chunk 3: load packages
library(genetics)
library(dplyr)
library(HardyWeinberg)
library(data.table)
library(psych)
set.seed(2209)
# Chunk 4
# load data
filename <- "TSIChr22v4.raw"
geneticData <- fread(filename, drop = c(1:6)) # first 6 cols are removed since they're not useful
# Chunk 5
variants <- ncol(geneticData); variants;
individuals <- nrow(geneticData); individuals;
cols <- which(colSums(geneticData == 1, na.rm = TRUE) > 0) # Non monomorphic (contains AB)
variants.poly <-length(cols);
variants.mono <- variants-variants.poly;
perc.mono <- 100*variants.mono/variants; perc.mono
geneticData.poly <- geneticData[, ..cols]
remove(geneticData)
ncol(geneticData.poly) #208933
# Chunk 6
rs587756191_T <- dplyr::recode(geneticData.poly$rs587756191_T, `0`="AA", `1`="AB", `2`="BB")
rs587756191_T.g <- genotype(rs587756191_T,sep="")
rs587756191_T.g.summary <- summary(rs587756191_T.g)
rs587756191_T.g.summary$genotype.freq #genotype counts
x <- MakeCounts(geneticData.poly$rs587756191_T)[1,1:3]
results.chi <- HWChisq(x,cc=0.5)
results.chi.nocor <- HWChisq(x,cc=0)
results.exact <- HWExact(x)
results.perm <- HWPerm(x)
# Chunk 7
alpha <- 0.05
count_matrix <- MakeCounts(geneticData.poly)[,1:3]
# Chunk 8
Chisq.pvals <- HWChisqStats(count_matrix, pvalues=TRUE)
p <- 100 * length(which(Chisq.pvals > 0.05)) / length(Chisq.pvals);p
# Chunk 9
c <- 100 * (1 - (length(which(Chisq.pvals > 0.05)) / length(Chisq.pvals)));c
# Chunk 10
max.ind <- which.max(Chisq.pvals)
most.sign.SNP.chisq <- geneticData.poly[, which.max(Chisq.pvals), with=FALSE]
names(most.sign.SNP.chisq)
gen.counts <- MakeCounts(most.sign.SNP.chisq)[,1:3] # A lot of AB
HWChisq(gen.counts, cc = 0)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls(all.names = TRUE))
library(genetics)
library(dplyr)
library(HardyWeinberg)
library(data.table)
library(psych)
set.seed(2209)
# load data
filename <- "TSIChr22v4.raw"
geneticData <- fread(filename, drop = c(1:6)) # first 6 cols are removed since they're not useful
# load data
# "http://www-eio.upc.es/~jan/data/bsg/TSIChr22v4.raw"
filename <- "TSIChr22v4.raw"
geneticData <- fread(filename, drop = c(1:6)) # first 6 cols are removed since they're not useful
variants <- ncol(geneticData); variants;
individuals <- nrow(geneticData); individuals;
cols <- which(colSums(geneticData == 1, na.rm = TRUE) > 0) # Non monomorphic (contains AB)
variants.poly <-length(cols);
variants.mono <- variants-variants.poly;
perc.mono <- 100*variants.mono/variants; perc.mono
geneticData.poly <- geneticData[, ..cols]
remove(geneticData)
ncol(geneticData.poly) #208933
rs587756191_T <- dplyr::recode(geneticData.poly$rs587756191_T, `0`="AA", `1`="AB", `2`="BB")
rs587756191_T.g <- genotype(rs587756191_T,sep="")
rs587756191_T.g.summary <- summary(rs587756191_T.g)
rs587756191_T.g.summary$genotype.freq #genotype counts
x <- MakeCounts(geneticData.poly$rs587756191_T)[1,1:3]
results.chi <- HWChisq(x,cc=0.5)
results.chi.nocor <- HWChisq(x,cc=0)
results.exact <- HWExact(x)
results.perm <- HWPerm(x)
alpha <- 0.05
count_matrix <- MakeCounts(geneticData.poly)[,1:3]
Chisq.pvals <- HWChisqStats(count_matrix, pvalues=TRUE)
p <- 100 * length(which(Chisq.pvals > 0.05)) / length(Chisq.pvals);p
c <- 100 * (1 - (length(which(Chisq.pvals > 0.05)) / length(Chisq.pvals)));c
max.ind <- which.max(Chisq.pvals)
most.sign.SNP.chisq <- geneticData.poly[, which.max(Chisq.pvals), with=FALSE]
names(most.sign.SNP.chisq)
gen.counts <- MakeCounts(most.sign.SNP.chisq)[,1:3] # A lot of AB
HWChisq(gen.counts, cc = 0)
max.ind <- which.max(Chisq.pvals)
most.sign.SNP.chisq <- geneticData.poly[, which.max(Chisq.pvals), with=FALSE]
names(most.sign.SNP.chisq)
gen.counts <- MakeCounts(most.sign.SNP.chisq)[,1:3];gen.counts # A lot of AB
exact_test_pvals <- HWExactStats(count_matrix)
sum(exact_test_pvals<=alpha) # num. significant SNPs
(sum(exact_test_pvals<=alpha) / nrow(count_matrix)) * 100
most_significant_SNP <- which.min(exact_test_pvals)
count_matrix[most_significant_SNP,][1:3]
m <- ncol(geneticData.poly)
likelihood_ratio_test_pvals <- 0*m
for (i in 1:m) {
likelihood_ratio_test_pvals[i] <- HWLratio(count_matrix[i,], verbose=FALSE)$pval
}
alpha <- 0.05
sum(likelihood_ratio_test_pvals<=alpha) # num. significant SNPs
(sum(likelihood_ratio_test_pvals<=alpha) / nrow(count_matrix)) * 100 # %
m <- 10
perm_test_pvals <- 0*m
count_matrix_10_first <- MakeCounts(geneticData.poly[,1:m])[,1:3]
for (i in 1:nrow(count_matrix_10_first)) {
perm_test_pvals[i] <- HWPerm(count_matrix_10_first[i,], verbose=FALSE)$pval
}
perm_test_pvals
exact_test_pvals[1:10]
m <- 10
perm_test_pvals <- 0*m
count_matrix_10_first <- MakeCounts(geneticData.poly[,1:m])[,1:3]
for (i in 1:nrow(count_matrix_10_first)) {
perm_test_pvals[i] <- HWPerm(count_matrix_10_first[i,], verbose=FALSE)$pval
}
perm_test_pvals
exact_test_pvals[1:10]
sum(perm_test_pvals<=0.05)==sum(exact_test_pvals[1:10]<=0.05)
unique_genotypes_count <- UniqueGenotypeCounts(count_matrix)[,1:3]
HWTernaryPlot(unique_genotypes_count)
fhat <- HWf(count_matrix)
psych::describe(fhat)
hist(fhat, breaks=seq(-1, 1, 0.25), xaxp=c(-1,1,8), c="turquoise", xlim=c(-1, 1), ylim=c(0, 4), prob=TRUE)
lines(density(fhat, bw=0.1), xlim=c(-1, 1), lt=2)
curve(dnorm(x, 0, 0.1), from=-1, to=1, add=TRUE) # quite similar to a dnorm
legend("topright", legend = c("Estimated density", "N(0,0.1)"), lty = c(1, 2))
